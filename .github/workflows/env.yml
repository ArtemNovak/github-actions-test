name: ENV variables

on:
    push:

env:
    WF_ENV: "${{ secrets.WF_ENV }}"

jobs:
    log-env:
        env:
          JOB_ENV: Available in job  
        runs-on: ubuntu-latest
        steps:
            - name: Log ENV Variables
              env:
                STEP_ENV: Available in step
              run: |
                echo "${WF_ENV}"
                echo "${JOB_ENV}"
                echo "STEP_ENV: ${STEP_ENV}"
            
            - name: Log ENV Variables
              run: |
                echo "STEP_ENV: ${STEP_ENV}"

    decrypt-secret:
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v4

            - name: decrypt file
              run: gpg --quiet --batch --yes --decrypt --passphrase="${PASSPHRASE}" --output $HOME/secret.json secret.json.gpg
              env: 
                PASSPHRASE: ${{ secrets.PASSPHRASE }}

            - name: print out file
              run: |
                cat $HOME/secret.json

    log-defaults-env:
        runs-on: ubuntu-latest
        steps:
            - name: default env
              run: |
                echo "JOB_ENV: ${JOB_ENV}"
                echo "WF_ENV: ${WF_ENV}"
                echo "${{ toJson(github) }}"
                echo ------------------------
                echo "${{ toJson(job) }}"
                echo ------------------------
                echo "${{ toJson(steps) }}"
                echo ------------------------
                echo "${{ toJson(runner) }}"
                echo ------------------------
                echo "${{ toJson(strategy) }}"
                echo ------------------------
                echo "${{ toJson(matrix) }}"
                echo ------------------------
                env | sort

    # create_issue:
    #     runs-on: ubuntu-latest
    #     permissions:
    #         issues: write
    #     steps:  
    #         - name: Create issue using REST API
    #           run: |
    #             echo hello
    #             # curl --request POST \
    #             # --url https://api.github.com/repos/${{ github.repository }}/issues \
    #             # --header 'authorization: Bearer ${{ secrets.GITHUB_TOKEN }}' \
    #             # --header 'content-type: application/json' \
    #             # --data '{
    #             #     "title": "Automated issue for commit: ${{ github.sha }}",
    #             #     "body": "This issue was automatically created by the GitHub Action workflow **${{ github.workflow }}**. \n\n The commit hash was: _${{ github.sha }}_."
    #             #     }' \
    #             # --fail